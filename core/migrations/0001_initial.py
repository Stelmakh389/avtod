# Generated by Django 4.2.10 on 2024-12-17 23:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_type', models.TextField(choices=[('measurement_tool', 'Средство измерения'), ('testing_equipment', 'Испытательное оборудование'), ('auxiliary_equipment', 'Вспомогательное оборудование')], verbose_name='Тип оборудования')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Наименование, модель')),
                ('tip', models.TextField(blank=True, null=True, verbose_name='Тип')),
                ('zav_nomer', models.TextField(blank=True, null=True, verbose_name='Заводской №')),
                ('inv_nomer', models.TextField(blank=True, null=True, verbose_name='Инв. №, год ввода в эксплуатацию')),
                ('reg_nomer', models.TextField(blank=True, null=True, verbose_name='Регистрационный номер СИ в Госреестре СИ')),
                ('kol_vo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во')),
                ('klass_toch', models.TextField(blank=True, null=True, verbose_name='Класс точности, погрешность /ТТХ')),
                ('predel', models.TextField(blank=True, null=True, verbose_name='Предел (диапазон измерений)')),
                ('period_poverk', models.TextField(blank=True, null=True, verbose_name='Периодичность поверки')),
                ('category_si', models.TextField(blank=True, null=True, verbose_name='Категория СИ')),
                ('organ_poverk', models.TextField(blank=True, null=True, verbose_name='Орган, осуществляющий поверку / Иная инф.')),
                ('data_poverk', models.DateField(blank=True, null=True, verbose_name='Дата последней поверки (месяц/год)')),
                ('srok_poverk', models.DateField(blank=True, null=True, verbose_name='Сроки проведения поверки (месяц/год)')),
                ('other', models.TextField(blank=True, null=True, verbose_name='Примечание')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название организации полное')),
                ('shortname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название организации сокращенное')),
                ('inn', models.CharField(blank=True, max_length=12, null=True, verbose_name='ИНН')),
                ('kpp', models.CharField(blank=True, max_length=12, null=True, verbose_name='КПП')),
                ('ogrn', models.CharField(blank=True, max_length=15, null=True, verbose_name='ОГРН')),
                ('legal_address', models.TextField(blank=True, null=True, verbose_name='Юридический адрес')),
                ('actual_address', models.TextField(blank=True, null=True, verbose_name='Фактический адрес')),
                ('checking_account', models.CharField(blank=True, max_length=20, null=True, verbose_name='Расчетный счет')),
                ('correspondent_account', models.CharField(blank=True, max_length=20, null=True, verbose_name='Корреспондентский счет')),
                ('namebank', models.TextField(blank=True, null=True, verbose_name='Название банка')),
                ('bik', models.CharField(blank=True, max_length=9, null=True, verbose_name='БИК')),
                ('email', models.CharField(blank=True, max_length=20, null=True, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('website', models.CharField(blank=True, max_length=20, null=True, verbose_name='Сайт')),
                ('accreditation_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер записи об аккредитации')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заказчик (контактные данные для ЮЛ, ФИО для ФЛ)')),
                ('legal_address', models.TextField(blank=True, null=True, verbose_name='Юридический адрес заказчика')),
                ('actual_address', models.TextField(blank=True, null=True, verbose_name='Фактический адрес заказчика')),
                ('receive_date', models.DateField(blank=True, null=True, verbose_name='Дата получения объекта')),
                ('customer_infos', models.TextField(blank=True, null=True, verbose_name='Заказчиком предоставлены сведения')),
                ('brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='Марка ТС')),
                ('commercial_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Коммерческое наименование')),
                ('vehicle_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип')),
                ('chassis', models.CharField(blank=True, max_length=100, null=True, verbose_name='Шасси')),
                ('vin', models.CharField(blank=True, max_length=17, null=True, verbose_name='VIN')),
                ('manufacture_date', models.CharField(blank=True, max_length=100, null=True, verbose_name='Месяц (при наличии) и год выпуска')),
                ('category', models.CharField(blank=True, choices=[('M', 'Категория M'), ('M1', 'Категория M1'), ('M2', 'Категория M2'), ('M3', 'Категория M3'), ('N', 'Категория N'), ('N1', 'Категория N1'), ('N2', 'Категория N2'), ('N3', 'Категория N3'), ('O', 'Категория O'), ('O1', 'Категория O1'), ('O2', 'Категория O2'), ('O3', 'Категория O3'), ('O4', 'Категория O4'), ('L', 'Категория L'), ('L1e', 'Категория L1e'), ('L2e', 'Категория L2e'), ('L3e', 'Категория L3e'), ('L4e', 'Категория L4e'), ('L5e', 'Категория L5e'), ('L6e', 'Категория L6e'), ('L7e', 'Категория L7e'), ('T', 'Категория T'), ('T1', 'Категория T1'), ('T2', 'Категория T2'), ('S', 'Категория S'), ('G', 'Категория G'), ('A', 'Категория A'), ('B', 'Категория B'), ('C', 'Категория C'), ('D', 'Категория D'), ('BE', 'Категория BE'), ('CE', 'Категория CE'), ('DE', 'Категория DE')], max_length=20, null=True, verbose_name='Категория ТС')),
                ('mileage', models.IntegerField(blank=True, null=True, verbose_name='Пробег')),
                ('fuel_type', models.CharField(blank=True, choices=[('Электрический', 'Электрический'), ('Бензиновый', 'Бензиновый'), ('Дизельный', 'Дизельный'), ('Гибридный', 'Гибридный')], max_length=20, null=True, verbose_name='Тип топлива')),
                ('manufacturer_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование изготовителя')),
                ('manufacturer_legal_address', models.TextField(blank=True, null=True, verbose_name='Юридический адрес изготовителя')),
                ('manufacturer_actual_address', models.TextField(blank=True, null=True, verbose_name='Фактический адрес изготовителя')),
                ('test_address', models.TextField(blank=True, null=True, verbose_name='Адрес проведения испытаний')),
                ('test_date', models.DateField(blank=True, null=True, verbose_name='Дата проведения испытаний')),
                ('temperature', models.TextField(blank=True, null=True, verbose_name='Температура воздуха')),
                ('humidity', models.TextField(blank=True, null=True, verbose_name='Относительная влажность')),
                ('pressure', models.TextField(blank=True, null=True, verbose_name='Атмосферное давление')),
                ('additional_info', models.TextField(blank=True, null=True, verbose_name='Иная информация, если требуется для объективности проведения испытаний (фон шумовых помех, комплектность ТС и т.п.)')),
                ('additional_info_two', models.TextField(blank=True, null=True, verbose_name='Дополнительные сведения')),
                ('equipment', models.ManyToManyField(blank=True, related_name='vehicles', to='core.equipment', verbose_name='Оборудование')),
            ],
        ),
        migrations.CreateModel(
            name='VehiclePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='vehicles/%Y/%m/%d/', verbose_name='Фотография')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Описание')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_photos', to='core.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleProtocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol_type', models.CharField(choices=[('1', 'Протокол измерений'), ('2', 'Протокол испытаний')], max_length=1, verbose_name='Тип протокола')),
                ('docx_file', models.FileField(blank=True, null=True, upload_to='protocols/docx/%Y/%m/%d/')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='protocols/pdf/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to='core.vehicle')),
            ],
            options={
                'unique_together': {('vehicle', 'protocol_type')},
            },
        ),
    ]
